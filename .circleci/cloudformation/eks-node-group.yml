Description: >
  Tushar Khachane 
  Capstone project for Cloud DevOps Engineering Nanodegree
Parameters:
  EnvironmentName:
    Description: An Environment name that will be prefixed to resources
    Type: String

  ImageID:
    Description: An image ID for EC2 Instance
    Type: String

  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

  DesiredInstances:
    Description: How many instances should be created.
    Type: Number

  MinSize:
    Description: Minimum number of web application servers
    Type: String

  MaxSize:
    Description: Maximum number of web application servers
    Type: String

Resources:
  NodesSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the nodes.
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 1025
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: !Sub
            - "kubernetes.io/cluster/${EksId}"
            - EksId:
                Fn::ImportValue: !Sub "${EnvironmentName}-EKS-Cluster-Id"
          Value: "owned"

  NodesAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Sub ${DesiredInstances}
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      VPCZoneIdentifier:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              Fn::Sub: ${EnvironmentName}-PUB-SUBNET
      Tags:
        - Key: Name
          Value: !Sub
            - "${EksId}-CapstoneNodesGroup-Node"
            - EksId:
                Fn::ImportValue: !Sub "${EnvironmentName}-EKS-Cluster-Id"
          PropagateAtLaunch: "true"
        - Key: !Sub
            - "kubernetes.io/cluster/${EksId}"
            - EksId:
                Fn::ImportValue: !Sub "${EnvironmentName}-EKS-Cluster-Id"
          Value: "owned"
          PropagateAtLaunch: "true"
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: "1"
        MinInstancesInService: 3
        PauseTime: "PT5M"

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: "true"
      IamInstanceProfile:
        Fn:: ImportValue: !Sub "${EnvironmentName}-Instance-Profile"
      ImageId: !Ref ImageID
      InstanceType: t2.medium
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref NodesSG
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 15
            VolumeType: gp2
            DeleteOnTermination: true
    
Outputs:
  NodesSecurityGroup:
    Description: The security group for the nodes.
    Value: !Ref NodesSG
    Export:
      Name: !Sub ${EnvironmentName}-NSG