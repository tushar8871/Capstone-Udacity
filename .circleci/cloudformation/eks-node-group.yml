Description: >
  Tushar Khachane 
  Capstone project for Cloud DevOps Engineering Nanodegree
Parameters:
  EnvironmentName:
    Description: An Environment name that will be prefixed to resources
    Type: String
    Default: Capstone-Udacity

  AMIID:
    Description: An image ID for EC2 Instance
    Type: String
    Default: ami-0c385d0d99fce057d
    
  KeyPairName:
    Description: A key to access EC2 Instance
    Type: String
    Default: Udacity_IAC

  DesiredInstances:
    Description: How many instances should be created.
    Type: Number
    Default: 2

  MinimumSize:
    Description: Minimum number of web application servers
    Type: Number
    Default: 1

  MaximumSize:
    Description: Maximum number of web application servers
    Type: Number
    Default: 3

Resources:
  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref NodeInstanceRole
  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the nodes.
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 1025
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 1025
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: !Sub
            - "kubernetes.io/cluster/${EksId}"
            - EksId:
                Fn::ImportValue: !Sub "${EnvironmentName}-EKS"
          Value: "owned"

  NodeLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: "true"
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 10
            VolumeType: gp2
      IamInstanceProfile: !Ref NodeInstanceProfile
      ImageId: !Ref AMIID
      InstanceType: t3.small
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - Ref: NodeSecurityGroup
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash
            set -o xtrace
            /etc/eks/bootstrap.sh ${EksId}
            /opt/aws/bin/cfn-signal --exit-code $? \
                     --stack  ${AWS::StackName} \
                     --resource NodeGroup  \
                     --region ${AWS::Region}
          - EksId:
              Fn::ImportValue: !Sub "${EnvironmentName}-EKS"

  NodeGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      DesiredCapacity: !Ref DesiredInstances
      LaunchConfigurationName: !Ref NodeLaunchConfig
      MaxSize: !Ref MaximumSize
      MinSize: !Ref MinimumSize
      Tags:
        - Key: Name
          Value: !Sub
            - "${EksId}-CapstoneNodesGroup"
            - EksId:
                Fn::ImportValue: !Sub "${EnvironmentName}-EKS"
          PropagateAtLaunch: "true"
        - Key: !Sub
            - "kubernetes.io/cluster/${EksId}"
            - EksId:
                Fn::ImportValue: !Sub "${EnvironmentName}-EKS"
          Value: "owned"
          PropagateAtLaunch: "true"
      VPCZoneIdentifier:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              Fn::Sub: ${EnvironmentName}-PUB-SUBNET
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: "1"
        MinInstancesInService: !Ref MinimumSize
        PauseTime: PT5M
        
Outputs:
  NodesSecurityGroup:
    Description: The security group for the nodes.
    Value: !Ref NodeSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-NSG
  NodesInstanceRole:
    Description: Instance Role Arn
    Value: !GetAtt NodeInstanceRole.Arn
    Export:
      Name: !Sub ${EnvironmentName}-NodeInstanceRole